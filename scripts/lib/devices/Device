import("devices.DeviceRepositoryAdaptor")
import("devices.Location")

var Device = Class({
  constructor: function(options) {
    this.metadata = {}
    
    if (options) {
      if (options.adaptor) this.adaptor = options.adaptor

      if (options.model) {
        this.metadata = options.model
      }
    }
    // Mandatory attributes
    this.metadata.enabled = true,
    this.metadata.cls = "devices.Device"
  },

  enable: function() {
    this.metadata.enabled = true
    this.save()
  },
  
  disable: function() {
    this.metadata.enabled = false
    this.save()
  },
  
  set: function(key, value) { // key could be a map
    if (typeof key == "string") {
	    this.metadata[key] = value
    } else if (typeof key == "object") {
        for (var k in key) this.metadata[k]=key[k]
    }
  },
    
  get: function(key) {
    return (this.metadata[key])
  },
  
  serialize: function() {
    return this.metadata
  },

  save: function() {
    if (this.adaptor) return this.adaptor.save(this)
  },
  
  delete: function() {
    if (this.adaptor) return this.adaptor.delete(this)
  }
})